
import java.awt.BorderLayout;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.Socket;
import java.net.UnknownHostException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Scanner;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ceras
 */
public class MessageDialog extends javax.swing.JDialog {
    private javax.swing.JLabel IDLabel;
    private javax.swing.JLabel DateLabel;
    static int ADD_PORT = 2001;
    ArrayList<String> sMessages = new ArrayList<>();
    String serverIP;
    
    /**
     * Creates new form MessageDialog
     */
    public MessageDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public void getName(String id) {
        IDLabel = new javax.swing.JLabel();
        IDLabel.setFont(new java.awt.Font("Tahoma", 0, 19));
        IDLabel.setText(id);
        setLayout(new BorderLayout());
        IDLabel.setHorizontalAlignment(JLabel.CENTER);
        add(IDLabel, BorderLayout.NORTH);
    }
    
    public void setIP(String ip) {
        serverIP = ip;
    }
    public String getIP() {
        return serverIP;
    }
    
    public ArrayList<String> giveSent() {
        return sMessages;
    }
    
    public void makeDateLabel() {
        DateLabel = new javax.swing.JLabel();
        DateLabel.setFont(new java.awt.Font("Tahoma", 0, 10));
        LocalDateTime currentDate = LocalDateTime.now();
        DateTimeFormatter formatDate = DateTimeFormatter.ofPattern("MM/dd/yyyy HH:mm");
        String formattedDate = currentDate.format(formatDate);
        String retrievalDate = formattedDate;
        DateLabel.setText(retrievalDate);
        setLayout(new BorderLayout());
        DateLabel.setHorizontalAlignment(JLabel.RIGHT);
        add(DateLabel, BorderLayout.NORTH);
    }
    
    public String formatDate(LocalDateTime d) {
        DateTimeFormatter formatDate = DateTimeFormatter.ofPattern("MM/dd/yyyy HH:mm");
        String formattedDate = d.format(formatDate);
        return formattedDate;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Send Public Message");

        jButton1.setText("Send");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendPublicMessage(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("#");

        jLabel3.setText("Send to:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("All followers");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jTextField1)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(jLabel1)))
                .addContainerGap(107, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SendPublicMessage(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendPublicMessage
        // TODO add your handling code here:
        String name = IDLabel.getText();
        String hashtag = jTextField2.getText().trim();
        String text = jTextField1.getText().trim();
        String recipient = jLabel4.getText();
        LocalDateTime sentDate = LocalDateTime.now();
        String date = this.formatDate(sentDate);
        String message = hashtag + ", " + recipient + ", " + date + ", " + text;
        sMessages.add(message);
        try {
            String host = serverIP;
            Socket s = new Socket(host, ADD_PORT);
            Scanner in = new Scanner(s.getInputStream());
            PrintWriter out = new PrintWriter(s.getOutputStream(), true);
            
            out.println("SEND MESSAGE");
            System.out.println("Sent: SEND MESSAGE");
            String result = in.nextLine();
            if (result.equals("Name?")) {
                out.println(name);
                System.out.println("Sent: " + name);
                result = in.nextLine();
                if (result.equals("Hashtag?")) {
                    out.println(hashtag);
                    System.out.println("Sent: " + hashtag);
                    result = in.nextLine();
                    System.out.println(result);
                }
                if (result.equals("Text?")) {
                    out.println(text);
                    System.out.println("Sent: " + text);
                    result = in.nextLine();
                    System.out.println(result);
                }
                if (result.equals("Recipient?")) {
                    out.println(recipient);
                    System.out.println("Sent: " + recipient);
                    result = in.nextLine();
                    System.out.println(result);
                }
                if (result.equals("Date?")) {
                    out.println(date);
                    System.out.println("Sent: " + date);
                    result = in.nextLine();
                    System.out.println(result);
                }
                if (result.equals("Message sent")) {
                    System.out.println(result);
                    JOptionPane.showMessageDialog(this, "Message sent");
                    this.dispose();
                } else if (result.equals("No followers")) {
                    System.out.println(result);
                    JOptionPane.showMessageDialog(this, "No followers. Unable to send message");
                } else if (result.equals("Missing fields")) {
                    System.out.println(result);
                    JOptionPane.showMessageDialog(this, "Make sure all text fields are filled out");
                } else if (result.equals("Not a public message")) {
                    System.out.println(result);
                    JOptionPane.showMessageDialog(this, "Not a public message. Make sure public is selected and that is will be sent to All followers");
                } else {
                    System.out.println(result);
                    JOptionPane.showMessageDialog(this, "Sending error");
                }
            } else {
                System.out.println("Error in protocol");
            }
            in.close();
            s.close();
        }
        catch (UnknownHostException e) {
            System.err.println("Add Protocol: no such host");
        }
        catch (IOException e) {
            System.err.println("IOEXCEPTION");
            System.err.println(e.getMessage());
        }
    }//GEN-LAST:event_SendPublicMessage

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MessageDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MessageDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MessageDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MessageDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MessageDialog dialog = new MessageDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
